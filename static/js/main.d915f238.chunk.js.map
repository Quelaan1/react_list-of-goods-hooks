{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPHABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAaMC,EA3CD,SACLA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAgBzB,OAdIF,IAAaP,EAASM,OACpBC,IAAaP,EAASW,UACxBD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBP,IAAaP,EAASgB,QACxBN,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGI,OAASH,EAAGG,WAKxBb,EACKM,EAAaQ,UAGfR,EAkBOS,CAAkBlB,EAAiBM,EAAUH,GAE3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpB,iBAAkBf,IAAaP,EAASW,SACxC,0BAA2BJ,IAAaP,EAASW,WAEnDY,QAtBS,kBAAMf,EAAYR,EAASW,WAgBtC,iCAWA,wBACEU,KAAK,SACLD,UAAWE,IAAW,CACpB,iBAAkBf,IAAaP,EAASgB,OACxC,0BAA2BT,IAAaP,EAASgB,SAEnDO,QA/BO,kBAAMf,EAAYR,EAASgB,SAyBpC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IAAW,CACpB,kBAAiC,IAAflB,EAClB,2BAA0C,IAAfA,IAE7BmB,QAxCQ,kBAAMlB,GAAaD,IAkC7B,qBAWCG,IAAaP,EAASM,OAAuB,IAAfF,EAC7B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QA/CI,WACZlB,GAAY,GACZG,EAAYR,EAASM,OA0Cf,mBAOE,QAGN,qBAAKc,UAAU,oCAAf,SACE,qBAAKA,UAAU,oBAAf,SACGX,EAAMe,KAAI,SAACC,GACV,OACE,8BACE,qBACE,UAAQ,OAERL,UAAU,qCAHZ,SAKGK,GAHIA,gBCxHvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d915f238.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    if (sortType === SortType.ALPHABET) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const alphabet = () => setSortType(SortType.ALPHABET);\n\n  const length = () => setSortType(SortType.LENGTH);\n\n  const reverse = () => setReversed(!isReversed);\n\n  const reset = () => {\n    setReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-info': sortType === SortType.ALPHABET,\n            'button is-info is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={alphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-info': sortType === SortType.LENGTH,\n            'button is-info is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={length}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-info': isReversed === true,\n            'button is-info is-light': isReversed === false,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {sortType !== SortType.NONE || isReversed !== false ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <div className=\"is-flex is-justify-content-center\">\n        <div className=\"has-text-centered\">\n          {goods.map((good) => {\n            return (\n              <div>\n                <div\n                  data-cy=\"Good\"\n                  key={good}\n                  className=\"box column is-info is-rounded mb-3\"\n                >\n                  {good}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}